{"ast":null,"code":"var _jsxFileName = \"E:\\\\SUMON\\\\REACT\\\\binance\\\\src\\\\Components\\\\ProgressBar.js\",\n  _s = $RefreshSig$();\n// CircularProgress.js\n\nimport React, { useState, useEffect } from \"react\";\nimport \"./CircularProgress.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Progress = ({\n  percentage\n}) => {\n  _s();\n  const [offset, setOffset] = useState(0);\n  useEffect(() => {\n    const progressOffset = (100 - percentage) / 100;\n    setOffset(progressOffset * 314); // 314 is the approximate circumference of a circle with radius 50\n\n    // Optionally, you can use the following line to smoothly animate the progress\n    // const interval = setInterval(() => setOffset((prevOffset) => prevOffset - 1), 16);\n\n    return () => {\n      // clearInterval(interval);\n    };\n  }, [percentage]);\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    className: \"circular-progress\",\n    height: \"100\",\n    width: \"100\",\n    children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n      className: \"progress-ring\",\n      stroke: \"#3498db\" // Set the color of the progress bar\n      ,\n      strokeWidth: \"5\" // Set the thickness of the progress bar\n      ,\n      fill: \"transparent\",\n      r: \"50\",\n      cx: \"50\",\n      cy: \"50\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n      className: \"progress-indicator\",\n      stroke: \"#2ecc71\" // Set the color of the progress indicator\n      ,\n      strokeWidth: \"5\",\n      fill: \"transparent\",\n      r: \"50\",\n      cx: \"50\",\n      cy: \"50\",\n      strokeDasharray: \"314\" // 314 is the approximate circumference of a circle with radius 50\n      ,\n      strokeDashoffset: offset\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n      x: \"50%\",\n      y: \"50%\",\n      textAnchor: \"middle\",\n      fill: \"#34495e\",\n      fontSize: \"16\",\n      children: [percentage, \"%\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(Progress, \"WzXr9uhGfXxPyY3YDt08E2OJQzY=\");\n_c = Progress;\nexport default Progress;\nvar _c;\n$RefreshReg$(_c, \"Progress\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Progress","percentage","_s","offset","setOffset","progressOffset","className","height","width","children","stroke","strokeWidth","fill","r","cx","cy","fileName","_jsxFileName","lineNumber","columnNumber","strokeDasharray","strokeDashoffset","x","y","textAnchor","fontSize","_c","$RefreshReg$"],"sources":["E:/SUMON/REACT/binance/src/Components/ProgressBar.js"],"sourcesContent":["// CircularProgress.js\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport \"./CircularProgress.css\";\r\n\r\nconst Progress = ({ percentage }) => {\r\n  const [offset, setOffset] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const progressOffset = (100 - percentage) / 100;\r\n    setOffset(progressOffset * 314); // 314 is the approximate circumference of a circle with radius 50\r\n\r\n    // Optionally, you can use the following line to smoothly animate the progress\r\n    // const interval = setInterval(() => setOffset((prevOffset) => prevOffset - 1), 16);\r\n\r\n    return () => {\r\n      // clearInterval(interval);\r\n    };\r\n  }, [percentage]);\r\n\r\n  return (\r\n    <svg className=\"circular-progress\" height=\"100\" width=\"100\">\r\n      <circle\r\n        className=\"progress-ring\"\r\n        stroke=\"#3498db\" // Set the color of the progress bar\r\n        strokeWidth=\"5\" // Set the thickness of the progress bar\r\n        fill=\"transparent\"\r\n        r=\"50\"\r\n        cx=\"50\"\r\n        cy=\"50\"\r\n      />\r\n      <circle\r\n        className=\"progress-indicator\"\r\n        stroke=\"#2ecc71\" // Set the color of the progress indicator\r\n        strokeWidth=\"5\"\r\n        fill=\"transparent\"\r\n        r=\"50\"\r\n        cx=\"50\"\r\n        cy=\"50\"\r\n        strokeDasharray=\"314\" // 314 is the approximate circumference of a circle with radius 50\r\n        strokeDashoffset={offset}\r\n      />\r\n      <text x=\"50%\" y=\"50%\" textAnchor=\"middle\" fill=\"#34495e\" fontSize=\"16\">\r\n        {percentage}%\r\n      </text>\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default Progress;\r\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,QAAQ,GAAGA,CAAC;EAAEC;AAAW,CAAC,KAAK;EAAAC,EAAA;EACnC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC;EAEvCC,SAAS,CAAC,MAAM;IACd,MAAMQ,cAAc,GAAG,CAAC,GAAG,GAAGJ,UAAU,IAAI,GAAG;IAC/CG,SAAS,CAACC,cAAc,GAAG,GAAG,CAAC,CAAC,CAAC;;IAEjC;IACA;;IAEA,OAAO,MAAM;MACX;IAAA,CACD;EACH,CAAC,EAAE,CAACJ,UAAU,CAAC,CAAC;EAEhB,oBACEF,OAAA;IAAKO,SAAS,EAAC,mBAAmB;IAACC,MAAM,EAAC,KAAK;IAACC,KAAK,EAAC,KAAK;IAAAC,QAAA,gBACzDV,OAAA;MACEO,SAAS,EAAC,eAAe;MACzBI,MAAM,EAAC,SAAS,CAAC;MAAA;MACjBC,WAAW,EAAC,GAAG,CAAC;MAAA;MAChBC,IAAI,EAAC,aAAa;MAClBC,CAAC,EAAC,IAAI;MACNC,EAAE,EAAC,IAAI;MACPC,EAAE,EAAC;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC,eACFpB,OAAA;MACEO,SAAS,EAAC,oBAAoB;MAC9BI,MAAM,EAAC,SAAS,CAAC;MAAA;MACjBC,WAAW,EAAC,GAAG;MACfC,IAAI,EAAC,aAAa;MAClBC,CAAC,EAAC,IAAI;MACNC,EAAE,EAAC,IAAI;MACPC,EAAE,EAAC,IAAI;MACPK,eAAe,EAAC,KAAK,CAAC;MAAA;MACtBC,gBAAgB,EAAElB;IAAO;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC,eACFpB,OAAA;MAAMuB,CAAC,EAAC,KAAK;MAACC,CAAC,EAAC,KAAK;MAACC,UAAU,EAAC,QAAQ;MAACZ,IAAI,EAAC,SAAS;MAACa,QAAQ,EAAC,IAAI;MAAAhB,QAAA,GACnER,UAAU,EAAC,GACd;IAAA;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAACjB,EAAA,CA1CIF,QAAQ;AAAA0B,EAAA,GAAR1B,QAAQ;AA4Cd,eAAeA,QAAQ;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}