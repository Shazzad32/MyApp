[{"E:\\SUMON\\REACT\\binance\\src\\index.js":"1","E:\\SUMON\\REACT\\binance\\src\\App.js":"2","E:\\SUMON\\REACT\\binance\\src\\reportWebVitals.js":"3","E:\\SUMON\\REACT\\binance\\src\\Components\\Main.js":"4","E:\\SUMON\\REACT\\binance\\src\\Components\\BinanceHome.js":"5","E:\\SUMON\\REACT\\binance\\src\\Components\\BinanceTable.js":"6","E:\\SUMON\\REACT\\binance\\src\\api\\index.js":"7","E:\\SUMON\\REACT\\binance\\src\\api\\binance_manager.js":"8","E:\\SUMON\\REACT\\binance\\src\\Components\\LoginComponent.js":"9","E:\\SUMON\\REACT\\binance\\src\\Components\\EditModal.js":"10","E:\\SUMON\\REACT\\binance\\src\\Components\\TopSubDiv.js":"11","E:\\SUMON\\REACT\\binance\\src\\Components\\AddCoin.js":"12"},{"size":535,"mtime":1699447263884,"results":"13","hashOfConfig":"14"},{"size":131,"mtime":1704019036520,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1699447264115,"results":"16","hashOfConfig":"14"},{"size":411,"mtime":1704098271643,"results":"17","hashOfConfig":"14"},{"size":9493,"mtime":1707852155814,"results":"18","hashOfConfig":"14"},{"size":18761,"mtime":1707908229056,"results":"19","hashOfConfig":"14"},{"size":139,"mtime":1703787094324,"results":"20","hashOfConfig":"14"},{"size":1029,"mtime":1710317556351,"results":"21","hashOfConfig":"14"},{"size":3064,"mtime":1710316026787,"results":"22","hashOfConfig":"14"},{"size":6445,"mtime":1705085997733,"results":"23","hashOfConfig":"14"},{"size":1190,"mtime":1710155357096,"results":"24","hashOfConfig":"14"},{"size":5474,"mtime":1707851571784,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"cw6wgu",{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},"E:\\SUMON\\REACT\\binance\\src\\index.js",[],[],"E:\\SUMON\\REACT\\binance\\src\\App.js",[],[],"E:\\SUMON\\REACT\\binance\\src\\reportWebVitals.js",[],[],"E:\\SUMON\\REACT\\binance\\src\\Components\\Main.js",[],[],"E:\\SUMON\\REACT\\binance\\src\\Components\\BinanceHome.js",[],[],"E:\\SUMON\\REACT\\binance\\src\\Components\\BinanceTable.js",[],[],"E:\\SUMON\\REACT\\binance\\src\\api\\index.js",[],[],"E:\\SUMON\\REACT\\binance\\src\\api\\binance_manager.js",[],[],"E:\\SUMON\\REACT\\binance\\src\\Components\\LoginComponent.js",["64"],[],"import { Button, InputAdornment, TextField } from \"@mui/material\";\r\nimport LockIcon from \"@mui/icons-material/Lock\";\r\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\r\nimport React, { useState } from \"react\";\r\nimport AccountBoxOutlinedIcon from \"@mui/icons-material/AccountBoxOutlined\";\r\nimport \"./style/responsive.css\";\r\n\r\nconst LoginComponent = ({ onLogin }) => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const handleLogin = () => {\r\n    if (username === \"forbit\" && password === \"rrr123\") {\r\n      onLogin();\r\n    } else {\r\n      alert(\"Incurrect username or password\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"main_top\"\r\n      style={{\r\n        height: \"100vh\",\r\n        width: \"100%\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n      }}\r\n    >\r\n      <div\r\n        className=\"top_log\"\r\n        style={{\r\n          height: \"50%\",\r\n          width: \"50%\",\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n          borderRadius: 10,\r\n        }}\r\n      >\r\n        <div\r\n          className=\"login\"\r\n          style={{\r\n            height: \"90%\",\r\n            width: \"60%\",\r\n            borderRadius: 5,\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            gap: 20,\r\n            borderBottom: \"1px solid silver\",\r\n            boxShadow:\r\n              \"rgba(50, 50, 93, 0.25) 0px 30px 60px -12px inset, rgba(0, 0, 0, 0.3) 0px 18px 36px -18px inset\",\r\n          }}\r\n        >\r\n          <h2 style={{ color: \"black\" }}>LOG IN</h2>\r\n          <TextField\r\n            className=\"name\"\r\n            label=\"User Name\"\r\n            type=\"text\"\r\n            value={username}\r\n            style={{ width: \"75%\" }}\r\n            onChange={(e) => setUsername(e.target.value)}\r\n            InputProps={{\r\n              startAdornment: (\r\n                <InputAdornment position=\"start\">\r\n                  {<AccountBoxOutlinedIcon />}\r\n                </InputAdornment>\r\n              ),\r\n            }}\r\n          />\r\n          <TextField\r\n            className=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            value={password}\r\n            style={{ width: \"75%\" }}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            InputProps={{\r\n              startAdornment: (\r\n                <InputAdornment position=\"start\">\r\n                  {<LockOutlinedIcon />}\r\n                </InputAdornment>\r\n              ),\r\n            }}\r\n          />\r\n          <Button\r\n            type=\"button\"\r\n            onClick={handleLogin}\r\n            style={{\r\n              width: \"75%\",\r\n              height: 45,\r\n              background: \"#3887BE\",\r\n              color: \"white\",\r\n            }}\r\n          >\r\n            Login\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginComponent;\r\n","E:\\SUMON\\REACT\\binance\\src\\Components\\EditModal.js",[],[],"E:\\SUMON\\REACT\\binance\\src\\Components\\TopSubDiv.js",[],[],"E:\\SUMON\\REACT\\binance\\src\\Components\\AddCoin.js",["65","66"],[],"import { InputAdornment, Modal, TextField } from \"@mui/material\";\r\nimport { useState } from \"react\";\r\nimport { motion } from \"framer-motion\";\r\nimport { LiaSearchSolid } from \"react-icons/lia\";\r\n\r\nconst AddCoin = ({ createCoin, open, handelAddCoinClose }) => {\r\n  const [value, setValue] = useState({\r\n    coin: \"\",\r\n    price: null,\r\n    quantity: null,\r\n  });\r\n\r\n  const [validation, setValidation] = useState({\r\n    coin: \"\",\r\n    price: null,\r\n    quantity: null,\r\n  });\r\n\r\n  const handelSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log(value);\r\n    setValue({\r\n      coin: \"\",\r\n      price: \"\",\r\n      quantity: \"\",\r\n    });\r\n\r\n    if (validateForm()) {\r\n      createCoin(value);\r\n      setValue({\r\n        coin: \"\",\r\n        price: \"\",\r\n        quantity: \"\",\r\n      });\r\n    } else {\r\n      console.log(\"Form is Empty\");\r\n    }\r\n  };\r\n\r\n  const handelInput = (e) => {\r\n    setValue({ ...value, [e.target.name]: e.target.value });\r\n    console.log(e.target.value);\r\n    setValidation({ ...validation, [e.target.name]: \"\" });\r\n  };\r\n\r\n  const validateForm = () => {\r\n    let isValid = true;\r\n    const newValidation = {};\r\n    if (!value.coin) {\r\n      newValidation.coin = \" \";\r\n      isValid = false;\r\n    } else if (!value.price) {\r\n      newValidation.price = \" \";\r\n      isValid = false;\r\n    } else if (!value.quantity) {\r\n      newValidation.quantity = \" \";\r\n      isValid = false;\r\n    }\r\n    setValidation(newValidation);\r\n    return isValid;\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      open={open}\r\n      style={{\r\n        height: \"100%\",\r\n        width: \"100%\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          height: \"60%\",\r\n          width: \"40%\",\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n          background: \"white\",\r\n          borderRadius: 10,\r\n          gap: 20,\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            height: \"90%\",\r\n            width: \"80%\",\r\n            padding: 10,\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            background: \"white\",\r\n          }}\r\n        >\r\n          <div\r\n            style={{\r\n              height: \"15%\",\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              width: \"100%\",\r\n              background: \"#176B87\",\r\n              color: \"white\",\r\n            }}\r\n          >\r\n            <h2>ADD NEW COIN</h2>\r\n          </div>\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              height: \"70%\",\r\n              width: \"100%\",\r\n              flexDirection: \"column\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              gap: 20,\r\n            }}\r\n          >\r\n            <TextField\r\n              fullWidth\r\n              type=\"text\"\r\n              name=\"coin\"\r\n              label=\"COIN NAME\"\r\n              variant=\"outlined\"\r\n              value={value.coin || \"\"}\r\n              onChange={handelInput}\r\n              error={!!validation.coin}\r\n              // helperText={!value.coin ? \"Coin Name Required\" : \"\"}\r\n            />\r\n            <TextField\r\n              fullWidth\r\n              type=\"number\"\r\n              name=\"price\"\r\n              label=\"PRICE\"\r\n              variant=\"outlined\"\r\n              value={value.price || \"\"}\r\n              onChange={handelInput}\r\n              error={!!validation.price}\r\n            />\r\n            <TextField\r\n              fullWidth\r\n              type=\"number\"\r\n              name=\"quantity\"\r\n              label=\"QUANTITY\"\r\n              variant=\"outlined\"\r\n              value={value.quantity || \"\"}\r\n              onChange={handelInput}\r\n              error={!!validation.quantity}\r\n              helperText={!value.quantity}\r\n            />\r\n          </div>\r\n          <div\r\n            style={{\r\n              height: \"15%\",\r\n              width: \"100%\",\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              gap: 15,\r\n            }}\r\n          >\r\n            {\" \"}\r\n            <motion.button\r\n              style={{\r\n                height: \"65%\",\r\n                width: \"12%\",\r\n                color: \"#fff\",\r\n                background: \"#176B87\",\r\n                border: \"none\",\r\n                borderRadius: 5,\r\n                fontSize: 14,\r\n                cursor: \"pointer\",\r\n              }}\r\n              whileHover={{ background: \"#092635\", scale: 1.05 }}\r\n              type=\"submit\"\r\n              onClick={handelSubmit}\r\n            >\r\n              SEND\r\n            </motion.button>\r\n            <motion.button\r\n              style={{\r\n                height: \"65%\",\r\n                width: \"12%\",\r\n                color: \"#fff\",\r\n                border: \"none\",\r\n                borderRadius: 5,\r\n                fontSize: 12,\r\n                background: \"#176B87\",\r\n                cursor: \"pointer\",\r\n              }}\r\n              whileHover={{ background: \"#092635\", scale: 1.05 }}\r\n              onClick={handelAddCoinClose}\r\n            >\r\n              CANCEL\r\n            </motion.button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default AddCoin;\r\n",{"ruleId":"67","severity":1,"message":"68","line":2,"column":8,"nodeType":"69","messageId":"70","endLine":2,"endColumn":16},{"ruleId":"67","severity":1,"message":"71","line":1,"column":10,"nodeType":"69","messageId":"70","endLine":1,"endColumn":24},{"ruleId":"67","severity":1,"message":"72","line":4,"column":10,"nodeType":"69","messageId":"70","endLine":4,"endColumn":24},"no-unused-vars","'LockIcon' is defined but never used.","Identifier","unusedVar","'InputAdornment' is defined but never used.","'LiaSearchSolid' is defined but never used."]